//EXAMPLES
    var multiply = function(x,y){return x*y;}; console.log(multiply(2,3));

    function increment(X) {
    return x + 1 ;
    }

    var four =
}

//anonymous function
// var increment + functions // (no name)(n) {
return x + 1;
}

var increment(x:1);


var numbers = [2,4,6,8];
numbers.forEach(functinon(num :number){
    console.log(num +=5);
    {


    }
})

functnion sayHello(userName){
    console.log(userName);
    alert("welcome," + userName);

}
var nameInput = prompt( "what\'s your name?");
sayHello(nameInput);


// Break problems down into section-
//write a function that accepts the name and converts to lowerCase
//write a function
//accept 1 peremeter
//convert param -> loverCase
//return the result (after lowerCased)
//execute the function
function toLowerCase(param){
    var lowerCase = param.toLowerCase();
    return lowerCase;

}

console.log(converttolowercaseparam: "welcome to codeup!!!"));
convertTolower(param: "and OVER");
convertTolower( param: "heLLo WoRlD")

//GLOBAL SCOPE

function sayHello() {
    //global var is accessible her since the sayHello function scope is a subscope of the global scope
    alert(localVar);
    alert(globalVar);
}
 sayHello();

var global =


//console.log("conditionals:");

  var pizzaPreference = prompt("What kind of pizza do you like?");

  switch(pizzaPreference) {
      case "pineapple and hot sauce":
          alert("What a coincidence, that's my favorite!");
          break;
      case "cheese":
          alert("Just plain cheese? Okay...");
          break;
      default:
          alert(pizzaPreference + " isn't my favorite, but let's order some!");
          break;
  }
  //write a function that accepts the weather and returns 'bring sunnies if its 'sunny' and
      //returns 'bring sunnies if it's sunny and
      //returns 'bring sweater' if its 'chilly'

  //if statements:

  //if / else/ switch- js keywords

  if (condition) { // user, developers decide on the condition
      // this is where our code lives
      // we only want this block of code to run IF and / ONLY is the condition is met to be true
      //
      //
      // }

      alert("before the statement!!")


   // var points = 40;
      //if (10 > 4)
          // local scope ->
          //alert("10 is greater than 4");
     // alert("you win a prize");
  // } else {
    //  alert("you win nothing...")
  }
     // alert( 'after the if statement')


  //weather: 70+ , bring sunnies
  //weather: 50-70, bring sweater
  //weather: 50-, stay home

  var weather = 60;
  var bringsweaterAndjacket = 32
      console.log('bringsweaterAndjacket');


  //if ( 32 < 50 )
      //local scope
      //alert('5 < 50');
  //alert('bringsweaterAndjacket'); {
    //  else
  //} ( 32 < 50) {
    //  console.log('bringsweaterAndjacket');
  //}



  //var message = (success) ? "Operation was successful." : "oops something went wrong"



//LOOPS
//ARRAYS
    //var shapes = ['square', 'rectangle', 'circle', 'triangle'];
    //console.log(shapes.length);) //4

    //var cars = ['ferrari', 'lambo', 'ford', 'chevy'];
    //console.log(cars.)

//ADDING OBJECTS TO ARRAYS/MANIPULATING ARRAYS

var daysOfTheWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday'];
var daysoftheWeek =["Monday, tuesday,wednesday"];

daysoftheWeek.unshift(items:'Sunday);
cosnsole.log(days of the week);

daysoftheWeek.push('Fiday',' Saturday);
console.log.(daysoftheWeek);


var todoList = ['Take out the trash', 'Clean the car', 'Pay the bills'];

var todoList = ['Take out the trash', 'Clean the car', 'Pay the bills'];

console.log('My todo list:');
console.log(todoList);
// ['Take out the trash', 'Clean the car', 'Pay the bills']

console.log('Completing the last item: ' + todoList[todoList.length - 1]);

// let's remove the last item
var removedItem = todoList.pop();

// log what we did
console.log('Task complete: ' + removedItem);

console.log(todoList);
// ['Take out the trash', 'Clean the car']

console.log('Completing the first item: ' + todoList[0]);

// let's remove the first item
var doneItem = todoList.shift();

// log what we did
console.log('Task complete: ' + doneItem);

console.log(todoList);
// ['Clean the car']

;)

LOCATING ARRAYS; [Monday,Tuesday,Weds,Thurs,Fri,Sat,Sun]
daysoftheWeek.indexOf("Monday")
console.log(daysoftheWeek);
indexOf-specify the specific location of a
indexof / lastIndexof - first and last location in array
slice-provide two index points, beginning and ending, cutting up array,         takes certain indexes that we have provided

var listPlanets = planetsString.split("|");
            var brlistPlanets = "<ul>" + "<li>" + listPlanets.join("</li><li>") + "</li>" + "</ul>";
            console.log(listPlanets);
            console.log(brlistPlanets);
EXAMPLE
// var namesString = "Joe,Bob,Sally";
        // console.log(namesString);
        // // Joe,Bob,Sally

        // var namesAsArray = namesString.split(",");
        // console.log(namesAsArray);
        // // ["Joe", "Bob", "Sally"]

        // namesAsArray.sort();
        // console.log(namesAsArray);

        // var arrayNames = namesAsArray.join(",");
        // console.log(arrayNames);
        // // Joe,Bob,Sally

        //JOINING
        let namesArray = ['Joe', 'Bob', 'Sally'] ,
        console.log(namesArray);
       this will log the console with the list ^^^
       var namesString = arrArray.join(',');
       console.l(namesString);
       this will log the console wit the list---you can manipulate this into splitting,joining,,reversing,adding, subtracting, index, turn into strings.

USE ALL REQUIREMENTS THE QUESTION IS ASKING!!!
        //OBJECTS
        HOW TO  CREATE AND ACCESSING OBJECTS INSIDE
        HOW TO CREATE-
            new object();
            we want to store it in a var
            var icecream = new object();
            console.log(icecream); = output >> {}
            key: values for each of these objects nested after variable
            you can use DOT to navigate to ur object to see whats nested               inside / console.log(bike.brand)
            var waterbottle = {
            steel: Yeti
            sport: football
            Oz: 20

console.log(state)
state.name='Texas'
console.log(state)
state.size='300000'



            }

            --MATH OBJECT--
            GET A RANDOM NUMBER --
            // Returns a random integer between min and max.
            function getRandomInt(min, max) {
                return Math.floor(Math.random() * (max - min + 1) + min);
            }
 ACCESSING-

        //*JQUERY js selectors
        <script src="jquery-.js"></script>
        <div>
        id selector
        $('#object').html()
        store this into something - var content = $('#hello').html()
        console.log(content);

        create a class - class selector <div class="color-block"></div>
        target it using jquery object $('color-block').css('background-color', 'red')

        //element selector
        $('p').css(name: 'backgound-color', value: 'purple') -you can add other objects and elements to the string '#hello, p'
        target everything - all selector $('*')



        JQUERY

        JQUERY EVENTS
        which event is doing the listening?
        which event is it listening for...hover, click...?
        what happens after the event?
        which element is being affected
        what about that element is being affected
        to what is it being changed/manipulated to?

        click on paragraph, alert that its been clicked
        1paragraph:
        2click method....
        3write our function-->

            $('p').click(function(){
        alert('paragraph has been clicked');
        }

        keyboard and mouse events-
        keydown and keypress
        create user input
        2.keydown$('#keyboard-events').keydown(function(){
        }
        3.console.log('user typing');})
        keydown,kepress,keyup,.on(), .off()
        $('keyboard-events').on)'keydown',function(){
        console.log($(;#keyoboard-events').text());
        }
        need time for the function to keyup....keeep in mind for JQUERY
        $('keyboard-events').on('keydown',function(){
                console.log($(;#keyoboard-events').val();

        TRAVERSING THROUGH ELEMENTS TO MANIPULATE--->
        .each() similar to forloop---this method mimics forloop
        .each()
        console.log($('li').first().html());
        var firstP- $('p');
        console.log(firstP);

        console.log(paragraphs.first().html());
        select children-->
        $('ul').children());

        alert the contents of the second paragraph...$('p')// [,p,p,p,p]
        console.log($('p').first().next().next().html())
        examples:
        var listItems = $('li');
        listItems.each(function(index){
        alert($(this).html());
        }
       -- alert the contents of the list items I click on
        $('li').each(function(index){
        $(this).click(function(){
        alert($(this).html())
        }
        }
        $(this).css({
        'background-color':'blue,
        'color':'white'
        }

        $('li').each(function(index){
        if index %of 2 !==0 {
        $('this').css
        }
        }

        AJAX
        good to remember--
        using jquery library ->$.ajax()
        $.ajax()//helps us make a request by default

        make the request
        $.ajax(url, {
        type: "GET"
        }
        do something with the response
        .done(function)res_{
        console.log(res);
        }
        we can also chain on fail, always, along with .done
        .fail..take that error.....fai.(function(err){
        alert('sorry request didnt happen')
        }.always(function(){
        alert('thanks for making a request')
        }

        // $.ajax("https://dog.ceo/api/breeds/image/random").done(function(data, status, jqXhr) {
        //     alert("AJAX call completed successfully!");
        //     console.log("Request status: " + status);
        //     console.log("Data returned from server:" + jqXhr);
        //     console.log(data);
        //     console.log(data.message)
        // }).fail(function(err){
        //     alert("sorry request didn't happen")
        // }).always(function (){
        //     alert('thanks for making a request')
        // })

        // $.ajax("https://dog.ceo/api/breds/image/random").done(function(data, status, jqXhr) {
        //     alert("Everything went great! Check out the server's response in the console.");
        //     console.log(data);
        // }).fail(function(jqXhr, status, error) {
        //     alert("There was an error! Check the console for details");
        //     console.log("Response status: " + status);
        //     console.log("Error object: " + error.message);
        // }).always(function() {
        //     alert("This function always runs!");
        // });


        // get and post

        // $.get('url/get').done(function(res){console.log(res)}).fail(function(err){console.log(err)});
        //
        // $.post('url/post', {
        //     data: {
        //         fbComment: 'i am always hungry',
        //         img: 'dropbox/img'
        //     }
        // }).done(function(rs){console.log(rs)}).fail(function(err){console.log(err)})
        //
        //

        ASYNCHRONOCITY

        alert("hello world")

        $.get('https://dog.ceo/ap/breeds/image/random')
            .fail(function(err){alert('sorry err on request')})
            .done(function(res){alert('response received!')})





        var weather = 45;
        if(weather <= 50){
            alert('bring a sweater!')
        }



        function doSomething(){
            alert('fn ran!')
        }
        alert('goodbye!')


        doSomething();

        // $.ajax('https://dog.ceo/api/breeds/image/random').done(function(res){
        //     console.log(res);
        //
        //     let dogImgSrc = res.message; // url
        //     console.log(dogImgSrc);
        //
        //     $('#container').html(`<img src="${dogImgSrc}">`)
        // })

<audio id="myAudio">
  <source src="my-audio-file.mp3" type="audio/mp3">
</audio>

<audio id="background-audio" loop>
  <source src="path/to/audio-file.mp3" type="audio/mpeg">
</audio>

<button id="playBtn">Play</button>
<button id="pauseBtn">Pause</button>
<audio id="myAudio">
  <source src="my-audio-file.mp3" type="audio/mp3">
</audio>


$(document).ready(function() {
  var audio = document.getElementById("background-audio");
  audio.volume = 0.2; // Set volume to a low level
  audio.play(); // Start playing the audio
});

<button id="playBtn">Play</button>
<button id="pauseBtn">Pause</button>

//PROMISES
pending,resolves, or rejected
prmoise = {
status:pending,
result:{},
headers:{}
}

//fetch -> makes the requests
// .then() -> handles a successful requests
// .catch() -> handles an error/failed request


fetch(api request url)
response.json().then(users => {
users.forEach ( user => {
//do something with eac user object...
console.log(user);
});

create a fetch request to jsontypicode.com and console.log() each of the blog posts


